name: Main

on: [push]

jobs:
  bundle-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    - name: bundle audit
      run: |
        gem install bundler bundler-audit
        cd backend
        bundle audit check --update
#######################################
  rubocop:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    - name: rubocop
      run: |
        gem install rubocop
        rubocop -c backend/.rubocop.yml
#######################################
  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: backend_test
        ports:
        - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    # required to compile pg ruby gem
    - name: install PostgreSQL client
      run: sudo apt-get install libpq-dev

    - name: Build DB and run Rspec
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        RAILS_ENV: test
        GIT_BRANCH: master
        CC_TEST_REPORTER_ID: 74855e8480493fa17a796717c03a42ba418a1a0f2cc96a1d7418e9ba572b2a9b
      run: |
        gem install bundler
        cd backend
        bundle install --without development production --jobs 4 --retry 3
        bundle exec rails db:setup
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
        bundle exec rspec
        ./cc-test-reporter after-build || echo “Skipping CC coverage upload”
